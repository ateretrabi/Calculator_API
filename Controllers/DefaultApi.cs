/*
 * Simple Inventory API
 *
 * This is a simple API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using WebCalculator.IO.Attributes;

using Microsoft.AspNetCore.Authorization;
using WebCalculator.IO.Models;

namespace WebCalculator.IO.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    [Authorize]
    public class CalculatorApiController : ControllerBase
    { 
        /// <summary>
        /// Calculate an expression
        /// </summary>
        /// <remarks>calculates the expression</remarks>
        /// <param name="body"></param>
        /// <response code="200">Calculation succeeded</response>
        /// <response code="400">Fail to calculate</response>
        [HttpPost]
        [Route("ateretrabi/WebCalculator/1.0.0/Calculate")]
        [ValidateModelState]
        [SwaggerOperation("Calculate")]
        public virtual Result Calculate([FromBody]Calculation body)
        {
            
            Result result = new Result();
            switch (body.Operator)
            {
                case Calculation.OperatorEnum.AddEnum:
                    result.value = body.FirstNumber + body.SecondNumber;
                    break;
                 
                case Calculation.OperatorEnum.SubtractEnum:
                    result.value = body.FirstNumber - body.SecondNumber;
                    break;
                case Calculation.OperatorEnum.MultiplyEnum:
                    result.value = body.FirstNumber * body.SecondNumber;
                    break;
                case Calculation.OperatorEnum.DivideEnum:
                    result.value = body.FirstNumber / body.SecondNumber;
                    break;

            }
            return result;
            
        }

       
    }
}
